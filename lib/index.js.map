{"version":3,"sources":["../src/index.js"],"names":["FlickityComponent","props","state","selectedIndex","isPaused","carousel","flkty","updateSelected","bind","imagesLoaded","index","setState","onSwipe","pausePlayer","player","playPlayer","unpausePlayer","reloadOnUpdate","reloadCells","options","autoPlay","off","destroy","disableImagesLoaded","instance","resize","on","createElement","elementType","className","ref","c","children","propTypes","bool","object","string","array","func","defaultProps"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport Flickity from 'flickity';\nimport imagesloaded from 'imagesloaded';\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport PropTypes from 'prop-types';\n\nclass FlickityComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedIndex: 0,\n      isPaused: true,\n    };\n\n    this.carousel = null;\n    this.flkty = null;\n    this.updateSelected = this.updateSelected.bind(this);\n    this.imagesLoaded = this.imagesLoaded.bind(this);\n  }\n\n  updateSelected() {\n    const index = this.flkty.selectedIndex;\n    this.setState({\n      selectedIndex: index,\n    });\n    if (this.props.onSwipe) {\n      this.props.onSwipe(index);\n    }\n  }\n\n  pausePlayer() {\n    this.flkty.pausePlayer();\n  }\n\n  unpausePlayer() {\n    this.flkty.player.state == 'stopped'\n      ? this.flkty.playPlayer()\n      : this.flkty.unpausePlayer();\n  }\n\n  togglePausePlayer() {\n    this.isPaused ? this.unpausePlayer() : this.pausePlayer();\n  }\n\n  componentDidUpdate() {\n    if (this.props.reloadOnUpdate) {\n      this.flkty.reloadCells();\n    }\n    this.props.options.autoPlay ? this.unpausePlayer() : this.pausePlayer();\n  }\n\n  componentWillUnmount() {\n    if (this.flkty) {\n      this.flkty.off('cellSelect', this.updateSelected);\n      this.flkty.destroy();\n    }\n  }\n\n  imagesLoaded() {\n    if (!this.props.disableImagesLoaded && canUseDOM) {\n      imagesloaded(\n        this.carousel,\n        function(instance) {\n          this.flkty.reloadCells();\n          this.flkty.resize();\n        }.bind(this)\n      );\n    }\n  }\n\n  componentDidMount() {\n    const carousel = this.carousel;\n    if (canUseDOM) {\n      this.flkty = new Flickity(carousel, this.props.options);\n      this.flkty.on('cellSelect', this.updateSelected);\n      this.imagesLoaded();\n    }\n  }\n\n  render() {\n    return React.createElement(\n      this.props.elementType,\n      {\n        className: this.props.className,\n        ref: c => {\n          this.carousel = c;\n        },\n      },\n      this.props.children\n    );\n  }\n}\n\nFlickityComponent.propTypes = {\n  disableImagesLoaded: PropTypes.bool,\n  reloadOnUpdate: PropTypes.bool,\n  options: PropTypes.object,\n  className: PropTypes.string,\n  elementType: PropTypes.string,\n  children: PropTypes.array,\n  onSwipe: PropTypes.func,\n};\n\nFlickityComponent.defaultProps = {\n  disableImagesLoaded: false,\n  reloadOnUpdate: false,\n  options: {},\n  className: '',\n  elementType: 'div',\n};\n\nexport default FlickityComponent;\n"]}